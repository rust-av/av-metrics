name: deploy-windows

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - name: Install mingw-w64
      run: |
        sudo apt-get install mingw-w64
    - name: Install x86_64-pc-windows-gnu
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: x86_64-pc-windows-gnu
    - name: Set rust for cross-compilation
      env:
          TARGET: rustlib/x86_64-pc-windows-gnu/lib/
      run: |
        printf "[target.x86_64-pc-windows-gnu] \n \
                linker = \"/usr/bin/x86_64-w64-mingw32-gcc\" \n \
                ar = \"/usr/x86_64-w64-mingw32/ar\"" > $HOME/.cargo/config
        # https://github.com/rust-lang/rust/issues/48272#issuecomment-429596397
        cd $HOME/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/$TARGET
        mv crt2.o crt2.o.bak
        cp /usr/x86_64-w64-mingw32/lib/crt2.o ./
    - name: Cross-compile
      env:
        TOOL_PATH: target/x86_64-pc-windows-gnu/release/av-metrics-tool.exe
      run: |
        cargo build --release --target x86_64-pc-windows-gnu
        mv $TOOL_PATH $GITHUB_WORKSPACE
    - name: Get version and changelog
      id: data
      run: |
        VERSION=$(head -n 1 CHANGELOG.md | tr -d "## Version ")
        echo "::set-output name=version::$VERSION"
        tail -n +2 CHANGELOG.md | sed -e '/^$/,$d' > CHANGELOG.txt
    - name: Create a release
      uses: softprops/action-gh-release@v1
      with:
        name: Version ${{ steps.data.outputs.version }}
        body_path: CHANGELOG.txt
        files: av-metrics-tool.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
